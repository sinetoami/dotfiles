#!/bin/bash
function parse_upower_output {
  # Parse time to full/empty output from upower.
  # The format is %.1f (minutes|hours) e.g. 27.8 minutes, 3.5 hours.
  # The output format is a %d:%d format e.g. 0:27, 1:55.
  python << EOF
from __future__ import print_function
line = "$TIME_REMAINING"
time = line.split(':')[1].strip()
amt, unit = time.split()
amt = float(amt)
if unit == 'minutes':
  print('0:%d' % int(amt))
else:
  hours = int(amt)
  mins = int((amt - hours) * 60)
  print('%d:%d' % (hours, mins))
EOF
}

function battery_status {
  if command -v pmset 2>&1 > /dev/null; then
    local AC_POWER=$(pmset -g ps | head -n1 | cut -d "'" -f 2)
    local BATTERY_PERC=$(pmset -g ps | tail -n1 | cut -d "%" -f 1 | cut -f 2)
    local TIME_REMAINING=$(pmset -g ps | tail -n1 | cut -d ';' -f 3 | cut -d ' ' -f 2)
  elif command -v upower 2>&1 > /dev/null; then
    local BAT_PATH='/org/freedesktop/UPower/devices/battery_BAT0'
    local AC_POWER=$(upower -i "$BAT_PATH" | grep state | awk '{print $2}')
    local BATTERY_PERC=$(upower -i "$BAT_PATH" | grep percentage | awk '{print $2}' | cut -d'%' -f1)
    local TIME_REMAINING="$(upower -i "$BAT_PATH" | grep 'time to')"
    if [[ -z "$TIME_REMAINING" ]]; then
      TIME_REMAINING='0:00'
    else
      TIME_REMAINING=$(parse_upower_output "$TIME_REMAINING")
    fi
  fi

  # Don't show time remaining when there's no estimate or it's 0:00 (laptop is charged).
  if [[ $TIME_REMAINING = '(no' || $TIME_REMAINING = '0:00' ]]; then
    TIME_REMAINING=""
  else
    TIME_REMAINING=" | $TIME_REMAINING"
  fi

  if [[ $BATTERY_PERC -lt 20 ]]; then
    local COLOR='brightred'
  elif [[ $BATTERY_PERC -lt 70 ]]; then
    local COLOR='brightyellow'
  else
    local COLOR='brightgreen'
  fi

  if [[ "$AC_POWER" = 'AC Power' \
      || "$AC_POWER" = 'charging' \
      || "$AC_POWER" = 'fully-charged' ]]; then
    local AC_OR_BT='ac'
  else
    local AC_OR_BT='bt'
  fi

  echo -n "#[fg=black,bg=$COLOR] $AC_OR_BT #[fg=$COLOR,bg=black] $BATTERY_PERC%$TIME_REMAINING#[default]"
}

function datetime {
  local COLOR="brightblue"
  echo -n "#[fg=black,bg=$COLOR] dt #[fg=$COLOR,bg=black] $(date +"%H:%M %a %m/%d") #[default]"
}

function disk_space {
  local COLOR="brightmagenta"
  local DISK_FREE=$(df -h | grep "/dev" | head -n1 | awk '{print $5, $4}')
  echo -n "#[fg=black,bg=$COLOR] ds #[fg=$COLOR,bg=black] $DISK_FREE#[default]"
}

function load_avg {
  local COLOR="brightcyan"
  local LOAD_AVG=$(python -c "import sys; print ' '.join(s.strip(',') for s in sys.argv[-3:])" $(uptime))
  echo -n "#[fg=black,bg=$COLOR] lo #[fg=$COLOR,bg=black] $LOAD_AVG#[default]"
}

function separator {
  echo -n "  "
}

function default {
  echo -n "#[default]"
}


default
command -v pmset 2>&1 > /dev/null \
    && battery_status && separator  # assume we're on a macbook
command -v upower 2>&1 > /dev/null \
    && [[ $(upower --dump | grep 'devices/battery' | wc -l) -ge 1 ]] \
    && battery_status && separator  # if we're on a laptop running linux
disk_space
separator
load_avg
separator
# datetime
