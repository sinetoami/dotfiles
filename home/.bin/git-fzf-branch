#!/usr/bin/env bash
# git-branch - git branch (including remote branches)

function _fzf() {
  fzf --cycle --height=80% "$@"
}

## Test if is into a git repository.
if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  echo "fatal: Not a git repo!"
  exit 1
fi

if [[ "$(git --no-pager branch --all | wc -l)" == 1 ]]; then 
  echo "git-fzf-branch: no branches" 
  exit 1
fi

## Get all branch names highlighted.
# git branch --all --color \
#   | grep -v HEAD \
#   | sed 's#.* ##' \
#   | sed 's#remotes/[^/]*/##' \
#   | _fzf +s "$1" +e --ansi --preview-window 'right:70%' \
#   --preview 'git log --graph --color --pretty=tformat:"%C(yellow)%h %Creset%s - %Cgreen%an%Creset" --date=human {1} -- | head -200'

## Shows up all branches except the current one drop it into a FZF list.
# git log format:
# %h - abreviatted commit hash
# %s - subject
# %an - author name
git --no-pager branch --all \
  --format="%(if)%(HEAD)%(then)%(else)%(if:equals=HEAD)%(refname:strip=3)%(then)%(else)%(refname:short)%(end)%(end)" \
  | sed '/^$/d' \
  | _fzf +s "$1" +e --ansi --preview-window 'right:70%' \
  --preview 'git log --graph --color --pretty=tformat:"%C(yellow)%h %Creset%s - %Cgreen%an%Creset" --date=human {1} -- | head -200'
